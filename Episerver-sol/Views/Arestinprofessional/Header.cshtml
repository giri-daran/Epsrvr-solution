@using EPiServer.Core
@using EPiServer.Web.Mvc.Html
@using EPiServer.Editor
@using EPiServer.Web
@using EpiserverBH.Helpers
@using Microsoft.AspNetCore.Mvc.Razor

@model IPageViewModel<SitePageData>

@{
    HelperResult MenuTemplate(HtmlHelpers.MenuItem menuItem)
    {
        bool children = false;
        bool.TryParse(menuItem.HasChildren.Value.ToString(), out children);


        <li class="nav-item nav-link dropdown">
            @if (children)
            {

                <div class="dropdown-toggle">
                    @Html.PageLink(menuItem.Page)
                    <div class="dropdown-menu">
                        <ul class="container">
                            @Html.MenuList(menuItem.Page.ContentLink, SubMainMenuTemplate)

                        </ul>
                    </div>
                    

                </div>

            }
            else
            {

                @Html.PageLink(menuItem.Page)
            }

        </li>

        return new HelperResult(w => Task.CompletedTask);

    }
}

@{
    HelperResult SubMainMenuTemplate(HtmlHelpers.MenuItem menuItem)
    {
        bool children = false;
        bool.TryParse(menuItem.HasChildren.Value.ToString(), out children);

        <li class="">

            @if (children)
            {

                @Html.PageLink(menuItem.Page)


                <ul class="submenu">

                    @Html.MenuList(menuItem.Page.ContentLink, SubMenuTemplate)

                </ul>
            }
            else
            {
                @Html.PageLink(menuItem.Page)
            }

        </li>
        return new HelperResult(w => Task.CompletedTask);

    }
}

@{
    HelperResult SubMenuTemplate(HtmlHelpers.MenuItem menuItem)
    {
        bool children = false;
        bool.TryParse(menuItem.HasChildren.Value.ToString(), out children);

        <li> @Html.PageLink(menuItem.Page)</li>
        return new HelperResult(w => Task.CompletedTask);
    }
}

<header>

    <div class="container">
        <div class="row">
            <div class="col-lg-4">
                <a class="logo" href="@Model.Layout.LogotypeLinkUrl" title="@Model.Layout.Logotype.Title">
                    <img class="img-fluid" src="@EpiserverBH.Helpers.HtmlHelpers.ToExternalImage(Convert.ToString(Model.Layout.Logotype.Url))" alt="@Model.Layout.Logotype.Title" />
                </a>
            </div>
            <div class="col-lg-8 d-none d-lg-block">
                @Html.PropertyFor(x => ((EpiserverBH.Models.Pages.Development.GenericHome)x.CurrentPage).HeaderLinks, new { })
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                 @*@Html.PropertyFor(x => x.CurrentPage.Property["HeaderLinks"].Value, new { })*@
                

                <nav class="navbar navbar-expand-lg">
                      
                        <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target="#navbarCollapse">
                        </button>
                        <div class="collapse navbar-collapse" id="navbarCollapse">
                            <div class="navbar-nav">
                                <ul class="navbar-nav">
                                    @Html.MenuList(SiteDefinition.Current.StartPage, MenuTemplate)
                                </ul>
                            <div class="topLinkNav d-block d-lg-none">
                                @Html.PropertyFor(x => ((EpiserverBH.Models.Pages.Development.GenericHome)x.CurrentPage).HeaderLinks, new { })
                            </div>
                            </div>
                        </div>
                </nav>
            </div>
        </div>
    </div>
</header>