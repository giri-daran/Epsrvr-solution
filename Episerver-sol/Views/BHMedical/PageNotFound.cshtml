@using EPiServer.Framework.Web.Mvc.Html
@using EpiserverBH.Business
@using EPiServer.Web
@using System
@using EPiServer.Core
@using EPiServer.ServiceLocation
@using EpiserverBH.Models.Pages.Development;

@model IPageViewModel<GenericError>
@{
    Layout = null;
}
@{ 
    string schemaInformation = Convert.ToString(ViewBag.SchemaInformation); 
    var pageRef = ContentReference.StartPage;
    var repository = EPiServer.ServiceLocation.ServiceLocator.Current.GetInstance<IContentRepository>();
    var startPage = ContentReference.StartPage;

    PageData SiteStartPage = repository.Get<PageData>(pageRef);

    var currentpage = ((EpiserverBH.Models.ViewModels.PageViewModel<GenericError>)Model).CurrentPage;
    string[] sitecss = currentpage.SiteCSS;
    string[] sitejs = currentpage.SiteJs;
}


<!DOCTYPE html>
<html lang="@Model.CurrentPage.Language">
<head id="Head">
    
    <script type="text/javascript" data-cmp-ab="1" src="https://cdn.consentmanager.net/delivery/autoblocking/a3416bb2117d8.js" data-cmp-host="c.delivery.consentmanager.net" data-cmp-cdn="cdn.consentmanager.net" data-cmp-codesrc="1"></script>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=10" />
    <meta name="viewport" Content="width=device-width, initial-scale=1.0, user-scalable=yes" />
    <meta id="MetaRobots" name="ROBOTS" content="INDEX, FOLLOW" />
    <link href="https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap" rel="stylesheet">
    <link href="/Assets/BadgeGrid/css/badge.css" rel="stylesheet" />
    <link href="/Assets/BHMedical/css/bootstrap.min.css" rel="stylesheet" />
    <link href="/Assets/BHMedical/css/global.css" rel="stylesheet" />
    <link rel="shortcut icon" href="/siteassets/img/favicon.ico" type="image/x-icon" />

   
    <title>@Model.CurrentPage.MetaTitle</title>


    @if (Model.CurrentPage.MetaKeywords != null && Model.CurrentPage.MetaKeywords.Length > 0)
    {
        <meta name="keywords" content="@string.Join(",", Model.CurrentPage.MetaKeywords)" />
    }
    @if (!string.IsNullOrWhiteSpace(Model.CurrentPage.MetaDescription))
    {
        <meta name="description" content="@Model.CurrentPage.MetaDescription" />
    }
    @if (!string.IsNullOrWhiteSpace(Convert.ToString(Model.CurrentPage.Property["OGTitle"].Value)))
    {
        <meta property="og:title" content="@Model.CurrentPage.Property["OGTitle"].Value" />
    }
    else
    {
        <meta property="og:title" content="@Model.CurrentPage.MetaTitle" />
    }
    @if (!string.IsNullOrWhiteSpace(Convert.ToString(Model.CurrentPage.Property["OGDescription"].Value)))
    {
        <meta property="og:description" content="@Model.CurrentPage.Property["OGDescription"].Value" />
    }
    else if (!string.IsNullOrWhiteSpace(Model.CurrentPage.MetaDescription))
    {
        <meta property="og:description" content="Model.CurrentPage.MetaDescription" />
    }

    @if (!string.IsNullOrWhiteSpace(Convert.ToString(Model.CurrentPage.Property["OGImage"].Value)))
    {
        <meta property="og:image" content="@EpiserverBH.Helpers.HtmlHelpers.ToExternalImage(Convert.ToString(Model.CurrentPage.Property["OGImage"].Value)))" />
    }
    
    @if (!string.IsNullOrWhiteSpace(Model.CurrentPage.MetaData))
    {
        @Html.Raw(Model.CurrentPage.MetaData)}

    @Html.CanonicalLink()
    @Html.AlternateLinks()
    @*Scripts.Render("~/bundles/js")*@

    @Html.RequiredClientResources("Header") @*Enable components to require resources. For an example, see the view for VideoBlock.*@
    @Html.RenderEPiServerQuickNavigator()

    @if (sitecss != null && sitecss.Length > 0)
    {
        for (var i = 0; i < sitecss.Length; i++)
        {
            <link href="@sitecss[i]" type="text/css" rel="stylesheet" />
        }
    }
  

    @{ if (Model.Layout.GoogleTagManager != null)
        {

            <script type="text/javascript">

                (function (w, d, s, l, i) {
                    w[l] = w[l] || []; w[l].push({ 'eaSendGaEvents': true, 'pageVariant': 'Default' });
                    w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' }); var f = d.getElementsByTagName(s)[0],
                        j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
                            'https://www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
                    /**/
                })(window, document, 'script', 'dataLayer', '@Model.Layout.GoogleTagManager');
            </script>
        } }

</head>

<body>
    <noscript>
        @{ if (Model.Layout.GoogleTagManager != null)
            {
                <iframe src="//www.googletagmanager.com/ns.html?id=@Model.Layout.GoogleTagManager"
                        height="0" width="0" style="display:none;visibility:hidden"></iframe> } }
    </noscript>

    <div id="Wrapper">
        @{ string layouturl = null;

            layouturl = "~/Views/" + Convert.ToString(SiteStartPage.Property["SiteTemplate"]); }

        @Html.FullRefreshPropertiesMetaData()
       
        @*Menu Code Starts Here*@
        @{
            HelperResult MenuTemplate(HtmlHelpers.MenuItem menuItem)
            {
                bool children = false;
                bool.TryParse(menuItem.HasChildren.Value.ToString(), out children);

                <li class="nav-item nav-link dropdown">
                    @if (children)
                    {
                        <div class="dropdown-toggle">
                            @Html.PageLink(menuItem.Page)
                            <ul class="dropdown-menu">
                                @Html.MenuList(menuItem.Page.ContentLink, SubMainMenuTemplate)
                            </ul>
                        </div>
                    }
                    else
                    {
                        @Html.PageLink(menuItem.Page)
                    }

                </li>
                return new HelperResult(w => Task.CompletedTask);
            }
        }


        @{
            HelperResult SubMainMenuTemplate(HtmlHelpers.MenuItem menuItem)
            {
                bool children = false;
                bool.TryParse(menuItem.HasChildren.Value.ToString(), out children);

                <li class="">
                    @if (children)
                    {
                        @Html.PageLink(menuItem.Page)
                        <ul class="submenu">
                            @Html.MenuList(menuItem.Page.ContentLink, SubMenuTemplate)
                        </ul>
                    }
                    else
                    {
                        @Html.PageLink(menuItem.Page)
                    }
                </li>
                return new HelperResult(w => Task.CompletedTask);
            }
        }

        @{
            HelperResult SubMenuTemplate(HtmlHelpers.MenuItem menuItem)
            {
                bool children = false;
                bool.TryParse(menuItem.HasChildren.Value.ToString(), out children);

                <li> @Html.PageLink(menuItem.Page)</li>
                return new HelperResult(w => Task.CompletedTask);
            }
        }

        <header class="top-bar">
            <nav class="">
                <div class="container d-none d-lg-block">
                    <div class="row">
                        <div class="col-lg-4">
                            <a class="logo" href="@Model.Layout.LogotypeLinkUrl" title="@Model.Layout.Logotype.Title">
                                <img class="img-fluid" src="@EpiserverBH.Helpers.HtmlHelpers.ToExternalImage(Convert.ToString(Model.Layout.Logotype.Url))" alt="@Model.Layout.Logotype.Title" />
                            </a>
                        </div>
                        <div class="col-lg-8">

                            @Html.PropertyFor(x => ((GenericError)x.CurrentPage).HeaderLinks, new { })
                        </div>
                    </div>
                </div>
                <div class="container d-block d-lg-none">
                    <div class="row">
                        <div class="col-lg-12">
                            <ul class="logo-list">
                                <li>
                                    <a class="logo" href="@Model.Layout.LogotypeLinkUrl" title="@Model.Layout.Logotype.Title">
                                        <img class="img-fluid" src="@EpiserverBH.Helpers.HtmlHelpers.ToExternalImage(Convert.ToString(Model.Layout.Logotype.Url))" alt="@Model.Layout.Logotype.Title" />
                                    </a>
                                </li>
                                <li>

                                    @Html.PropertyFor(x => ((GenericError)x.CurrentPage).HeaderLinks, new { })

                                </li>
                            </ul>
                        </div>
                    </div>

                    @*<button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target="#navbarCollapse">

                    </button>*@
                    @*<div class="collapse navbar-collapse" id="navbarCollapse">
                    <div class="navbar-nav ms-auto p-lg-0">
                    <ul class="navbar-nav">
                    @Html.MenuList(SiteDefinition.Current.StartPage, MenuTemplate)
                    </ul>

                    </div>
                    </div>*@
                </div>
            </nav>
        </header>

        @Html.PropertyFor(x => ((GenericError)x.CurrentPage).BannerSlider, new { })

        @Html.PropertyFor(x => ((GenericError)x.CurrentPage).BannerContent, new { })

        @Html.PropertyFor(x => ((GenericError)x.CurrentPage).ContentArea, new { })

        @Html.PropertyFor(x => ((GenericError)x.CurrentPage).FormArea, new { })

        @Html.PropertyFor(x => ((GenericError)x.CurrentPage).ISISection, new { })

        @Html.PropertyFor(x => ((GenericError)x.CurrentPage).PopUp, new { })

        <footer>
            <div class="footer">

                @Html.PropertyFor(x => ((GenericError)x.CurrentPage).Footer, new { })

                <div class="footer-contents">

                    @Html.PropertyFor(x => ((GenericError)x.CurrentPage).FooterSocial, new { })
                    @if (Model.Layout.FooterLinks != null)
                    {
                        <ul class="footer-links">
                            @{
                                foreach (var link in Model.Layout.FooterLinks)
                                {
                                    string URL = link.Href;
                                    <li>
                                        <a target="@link.Target" href="@Url.PageUrl(URL)">
                                            @link.Text
                                        </a>
                                    </li>
                                }
                            }
                        </ul>
                    }


                    @Html.PropertyFor(x => ((GenericError)x.CurrentPage).FooterLegal, new { })
                    @if (!string.IsNullOrWhiteSpace(Convert.ToString(@Model.CurrentPage.Property["PRCCode"].Value)))
                    {
                        <div class="prc-footer">
                            <p class="copy">
                                @EpiserverBH.Helpers.HtmlHelpers.ReturnString(Model.CurrentPage, "PRCCode");
                            </p>
                        </div>
                    }


                    @Html.PropertyFor(x => ((GenericError)x.CurrentPage).FooterAfterPRC, new { })

                </div>
            </div>

        </footer>
        
    </div>
    @Html.RequiredClientResources("Footer")
    @if (sitejs != null && sitejs.Length > 0)
    {
        for (var i = 0; i < sitejs.Length; i++)
        {
            <script src="@sitejs[i]" type="text/javascript" async></script>
        }
    }
 
    <script src="/Assets/BHMedical/js/jquery.min.js" text="text/javascript"></script>
    <script src="/Assets/BHMedical/js/bootstrap.min.js" text="text/javascript"></script>
    <script src="/Assets/BHMedical/js/modal.js" text="text/javascript"></script>

</body>
</html>
