@*
    ====================================
    Version: 5.3.0.0. Modified: 20221017
    ====================================
*@

@using EPiServer.Forms.Helpers.Internal
@using EPiServer.Forms.Implementation.Elements
@model ChoiceElementBlock

@{
    var formElement = Model.FormElement;
    var items = Model.GetItems();
    var cssClasses = Model.GetValidationCssClasses();
    var labelText = Model.Label;
}

@{
    string labelcss = "", inputcss = "", divcss = "", labeldivcss = "", inputdivcss = "";
    divcss = Convert.ToString(Model.FormElement.SourceContent.Property["DivCSS"]);
    inputcss = Convert.ToString(Model.FormElement.SourceContent.Property["InputCSS"]);
    labelcss = Convert.ToString(Model.FormElement.SourceContent.Property["LabelCSS"]);
    inputdivcss = Convert.ToString(Model.FormElement.SourceContent.Property["InputDivCSS"]);
    labeldivcss = Convert.ToString(Model.FormElement.SourceContent.Property["LabelDivCSS"]);
}
<div class="@divcss">
    @using (Html.BeginElement(Model, new { id = formElement.Guid, @class = "FormChoice" + cssClasses, data_f_type = "choice", aria_invalid = Util.GetAriaInvalidByValidationCssClasses(cssClasses) }, true))
    {
        <div aria-describedby="@Util.GetAriaDescribedByElementName(formElement.ElementName)">
            @if (!string.IsNullOrWhiteSpace(Model.Label))
            {
                <div class="@labeldivcss">
                    <label class="@labelcss Form__Element__Caption">@Model.Label</label>
                </div>
            }
            @foreach (var item in items.Select((item, index) => new { index, item }))
            {
                var defaultCheckedString = Model.GetDefaultSelectedString(item.item);
                var checkedString = string.IsNullOrEmpty(defaultCheckedString) ? string.Empty : "checked";
                var choiceId = string.Format("{0}_{1}", formElement.Guid, item.index);
                <div class="@inputdivcss">

                    <label>
                        @if (Model.AllowMultiSelect)
                        {
                            <input type="checkbox" id="@choiceId" name="@formElement.ElementName" value="@item.item.Value" class="@inputcss FormChoice__Input FormChoice__Input--Checkbox" @checkedString @defaultCheckedString data-f-datainput />
                            @item.item.Caption
                        }
                        else
                        {
                            <input type="radio" id="@choiceId" name="@formElement.ElementName" value="@item.item.Value" class="@inputcss FormChoice__Input FormChoice__Input--Radio" @checkedString @defaultCheckedString data-f-datainput />
                            @item.item.Caption
                        }
                    </label>
                </div>
            }
        </div>
        @Html.ValidationMessageFor(Model)
    }
</div>